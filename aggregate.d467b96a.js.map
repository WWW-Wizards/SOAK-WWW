{"mappings":"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","sources":["<anon>","node_modules/@newrelic/browser-agent/dist/esm/features/page_view_timing/aggregate/index.js","node_modules/@newrelic/browser-agent/dist/esm/common/serialize/bel-serializer.js","node_modules/@newrelic/browser-agent/dist/esm/common/vitals/cumulative-layout-shift.js","node_modules/@newrelic/browser-agent/dist/esm/common/vitals/interaction-to-next-paint.js","node_modules/@newrelic/browser-agent/dist/esm/common/vitals/largest-contentful-paint.js","node_modules/@newrelic/browser-agent/dist/esm/common/vitals/time-to-first-byte.js","node_modules/@newrelic/browser-agent/dist/esm/common/util/event-origin.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire5e30\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"6XknC\", function(module, exports) {\n\n$parcel$export(module.exports, \"Aggregate\", function () { return $51080fcd9910df5b$export$b9601df20779e14a; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $ewyxt = parcelRequire(\"ewyxt\");\n\nvar $4he1m = parcelRequire(\"4he1m\");\n\nvar $gy0pT = parcelRequire(\"gy0pT\");\n\nvar $gOaMh = parcelRequire(\"gOaMh\");\n\nvar $3R40a = parcelRequire(\"3R40a\");\n\nvar $3DmF0 = parcelRequire(\"3DmF0\");\n\nvar $jXK74 = parcelRequire(\"jXK74\");\n\nvar $ifld8 = parcelRequire(\"ifld8\");\n\nvar $gDw2s = parcelRequire(\"gDw2s\");\n\nvar $kQNeS = parcelRequire(\"kQNeS\");\n\nvar $gaJ3s = parcelRequire(\"gaJ3s\");\n\nvar $kkmY2 = parcelRequire(\"kkmY2\");\n\nvar $kx4OV = parcelRequire(\"kx4OV\");\n\nvar $dYojd = parcelRequire(\"dYojd\");\n\nvar $9EKMI = parcelRequire(\"9EKMI\");\n\nvar $aDRsS = parcelRequire(\"aDRsS\");\nclass $51080fcd9910df5b$export$b9601df20779e14a extends (0, $3DmF0.AggregateBase) {\n    static featureName = (0, $gOaMh.FEATURE_NAME);\n    #handleVitalMetric = ({ name: name, value: value, attrs: attrs })=>{\n        this.addTiming(name, value, attrs);\n    };\n    constructor(agentRef){\n        super(agentRef, (0, $gOaMh.FEATURE_NAME));\n        this.curSessEndRecorded = false;\n        this.firstIxnRecorded = false;\n        (0, $4he1m.registerHandler)('docHidden', (msTimestamp)=>this.endCurrentSession(msTimestamp), this.featureName, this.ee);\n        // Add the time of _window pagehide event_ firing to the next PVT harvest == NRDB windowUnload attr:\n        (0, $4he1m.registerHandler)('winPagehide', (msTimestamp)=>this.addTiming('unload', msTimestamp, null), this.featureName, this.ee);\n        this.waitForFlags([]).then(()=>{\n            (0, $gDw2s.firstPaint).subscribe(this.#handleVitalMetric);\n            (0, $ifld8.firstContentfulPaint).subscribe(this.#handleVitalMetric);\n            (0, $gaJ3s.largestContentfulPaint).subscribe(this.#handleVitalMetric);\n            (0, $kQNeS.interactionToNextPaint).subscribe(this.#handleVitalMetric);\n            (0, $kkmY2.timeToFirstByte).subscribe(({ attrs: attrs })=>{\n                this.addTiming('load', Math.round(attrs.navigationEntry.loadEventEnd));\n            });\n            (0, $kx4OV.subscribeToVisibilityChange)(()=>{\n                /* Downstream, the event consumer interprets all timing node value as ms-unit and converts it to seconds via division by 1000. CLS is unitless so this normally is a problem.\n          bel.6 schema also doesn't support decimal values, of which cls within [0,1). However, the two nicely cancels out, and we can multiply cls by 1000 to both negate the division\n          and send an integer > 1. We effectively lose some precision down to 3 decimal places for this workaround. E.g. (real) 0.749132... -> 749.132...-> 749 -> 0.749 (final) */ const { name: name, value: value, attrs: attrs } = (0, $jXK74.cumulativeLayoutShift).current;\n                if (value === undefined) return;\n                this.addTiming(name, value * 1000, attrs);\n            }, true, true); // CLS node should only reports on vis change rather than on every change\n            this.drain();\n        });\n    }\n    /**\n   * Add the time of _document visibilitychange to hidden_ to the next PVT harvest == NRDB pageHide attr.\n   * @param {number} timestamp\n   */ endCurrentSession(timestamp) {\n        if (!this.curSessEndRecorded) {\n            // TO DO: stage 2 - we don't want to capture this timing twice on page navigating away, but it should run again if we return to page and away *again*\n            this.addTiming('pageHide', timestamp, null);\n            this.curSessEndRecorded = true;\n        }\n    }\n    addTiming(name, value, attrs) {\n        attrs = attrs || {};\n        $51080fcd9910df5b$var$addConnectionAttributes(attrs); // network conditions may differ from the actual for VitalMetrics when they were captured\n        // If cls was set to another value by `onCLS`, then it's supported and is attached onto any timing but is omitted until such time.\n        /*\n    *cli Apr'23 - Convert attach-to-all -> attach-if-not-null. See NEWRELIC-6143.\n    Issue: Because NR 'pageHide' was only sent once with what is considered the \"final\" CLS value, in the case that 'pageHide' fires before 'load' happens, we incorrectly a final CLS of 0 for that page.\n    Mitigation: We've set initial CLS to null so that it's omitted from timings like 'pageHide' in that edge case. It should only be included if onCLS callback was executed at least once.\n    Future: onCLS value changes should be reported directly & CLS separated into its own timing node so it's not beholden to 'pageHide' firing. It'd also be possible to report the real final CLS.\n    *cli Mar'24 update: CLS now emitted as its own timing node in addition to as-property under other nodes. The 'cls' property is unnecessary for cls nodes.\n    */ if (name !== (0, $dYojd.VITAL_NAMES).CUMULATIVE_LAYOUT_SHIFT && (0, $jXK74.cumulativeLayoutShift).current.value >= 0) attrs.cls = (0, $jXK74.cumulativeLayoutShift).current.value;\n        const timing = {\n            name: name,\n            value: value,\n            attrs: attrs\n        };\n        this.events.add(timing);\n        (0, $gy0pT.handle)('pvtAdded', [\n            name,\n            value,\n            attrs\n        ], undefined, (0, $3R40a.FEATURE_NAMES).sessionTrace, this.ee);\n        this.checkForFirstInteraction();\n        // makes testing easier\n        return timing;\n    }\n    /**\n   * Checks the performance API to see if the agent can set a first interaction event value\n   * @returns {void}\n   */ checkForFirstInteraction() {\n        // preserve the original behavior where FID is not reported if the page is hidden before the first interaction\n        if (this.firstIxnRecorded || (0, $9EKMI.initiallyHidden) || !performance) return;\n        const firstInput = performance.getEntriesByType('first-input')[0];\n        if (!firstInput) return;\n        this.firstIxnRecorded = true;\n        this.addTiming('fi', firstInput.startTime, {\n            type: firstInput.name,\n            eventTarget: (0, $aDRsS.eventOrigin)(firstInput.target),\n            loadState: document.readyState\n        });\n    }\n    appendGlobalCustomAttributes(timing) {\n        var timingAttributes = timing.attrs || {};\n        var reservedAttributes = [\n            'size',\n            'eid',\n            'cls',\n            'type',\n            'fid',\n            'elTag',\n            'elUrl',\n            'net-type',\n            'net-etype',\n            'net-rtt',\n            'net-dlink'\n        ];\n        Object.entries(this.agentRef.info.jsAttributes || {}).forEach(([key, val])=>{\n            if (reservedAttributes.indexOf(key) < 0) timingAttributes[key] = val;\n        });\n    }\n    preHarvestChecks() {\n        this.checkForFirstInteraction();\n        return super.preHarvestChecks();\n    }\n    // serialize array of timing data\n    serializer(eventBuffer) {\n        var addString = (0, $ewyxt.getAddStringContext)(this.agentRef.runtime.obfuscator);\n        var payload = 'bel.6;';\n        for(var i = 0; i < eventBuffer.length; i++){\n            var timing = eventBuffer[i];\n            payload += 'e,';\n            payload += addString(timing.name) + ',';\n            payload += (0, $ewyxt.nullable)(timing.value, (0, $ewyxt.numeric), false) + ',';\n            this.appendGlobalCustomAttributes(timing);\n            var attrParts = (0, $ewyxt.addCustomAttributes)(timing.attrs, addString);\n            if (attrParts && attrParts.length > 0) payload += (0, $ewyxt.numeric)(attrParts.length) + ';' + attrParts.join(';');\n            if (i + 1 < eventBuffer.length) payload += ';';\n        }\n        return payload;\n    }\n}\nfunction $51080fcd9910df5b$var$addConnectionAttributes(obj) {\n    var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection; // to date, both window & worker shares the same support for connection\n    if (!connection) return;\n    if (connection.type) obj['net-type'] = connection.type;\n    if (connection.effectiveType) obj['net-etype'] = connection.effectiveType;\n    if (connection.rtt) obj['net-rtt'] = connection.rtt;\n    if (connection.downlink) obj['net-dlink'] = connection.downlink;\n}\n\n});\nparcelRegister(\"ewyxt\", function(module, exports) {\n\n$parcel$export(module.exports, \"nullable\", function () { return $a92ed88948900b2c$export$133fc36489ac9add; });\n$parcel$export(module.exports, \"numeric\", function () { return $a92ed88948900b2c$export$b7a508fa8dae59fc; });\n$parcel$export(module.exports, \"getAddStringContext\", function () { return $a92ed88948900b2c$export$71f03e17b83cbe02; });\n$parcel$export(module.exports, \"addCustomAttributes\", function () { return $a92ed88948900b2c$export$b7f14f78b59de5aa; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $8KO5M = parcelRequire(\"8KO5M\");\nvar $a92ed88948900b2c$var$hasOwnProp = Object.prototype.hasOwnProperty;\nvar $a92ed88948900b2c$var$MAX_ATTRIBUTES = 64;\nfunction $a92ed88948900b2c$export$133fc36489ac9add(val, fn, comma) {\n    return val || val === 0 || val === '' ? fn(val) + (comma ? ',' : '') : '!';\n}\nfunction $a92ed88948900b2c$export$b7a508fa8dae59fc(n, noDefault) {\n    if (noDefault) return Math.floor(n).toString(36);\n    return n === undefined || n === 0 ? '' : Math.floor(n).toString(36);\n}\nfunction $a92ed88948900b2c$export$71f03e17b83cbe02(obfuscator) {\n    let stringTableIdx = 0;\n    const stringTable = Object.prototype.hasOwnProperty.call(Object, 'create') ? Object.create(null) : {};\n    return addString;\n    function addString(str) {\n        if (typeof str === 'undefined' || str === '') return '';\n        str = obfuscator.obfuscateString(String(str));\n        if ($a92ed88948900b2c$var$hasOwnProp.call(stringTable, str)) return $a92ed88948900b2c$export$b7a508fa8dae59fc(stringTable[str], true);\n        else {\n            stringTable[str] = stringTableIdx++;\n            return $a92ed88948900b2c$var$quoteString(str);\n        }\n    }\n}\nfunction $a92ed88948900b2c$export$b7f14f78b59de5aa(attrs, addString) {\n    var attrParts = [];\n    Object.entries(attrs || {}).forEach(([key, val])=>{\n        if (attrParts.length >= $a92ed88948900b2c$var$MAX_ATTRIBUTES) return;\n        var type = 5;\n        var serializedValue;\n        // add key to string table first\n        key = addString(key);\n        switch(typeof val){\n            case 'object':\n                if (val) // serialize objects to strings\n                serializedValue = addString((0, $8KO5M.stringify)(val));\n                else // null attribute type\n                type = 9;\n                break;\n            case 'number':\n                type = 6;\n                // make sure numbers contain a `.` so they are parsed as doubles\n                serializedValue = val % 1 ? val : val + '.';\n                break;\n            case 'boolean':\n                type = val ? 7 : 8;\n                break;\n            case 'undefined':\n                // we treat undefined as a null attribute (since dirac does not have a concept of undefined)\n                type = 9;\n                break;\n            default:\n                serializedValue = addString(val);\n        }\n        attrParts.push([\n            type,\n            key + (serializedValue ? ',' + serializedValue : '')\n        ]);\n    });\n    return attrParts;\n}\nvar $a92ed88948900b2c$var$escapable = /([,\\\\;])/g;\nfunction $a92ed88948900b2c$var$quoteString(str) {\n    return \"'\" + str.replace($a92ed88948900b2c$var$escapable, '\\\\$1');\n}\n\n});\n\nparcelRegister(\"jXK74\", function(module, exports) {\n\n$parcel$export(module.exports, \"cumulativeLayoutShift\", function () { return $e8874c1bee25ba42$export$b16095919f7e9e4a; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $8683F = parcelRequire(\"8683F\");\n\nvar $dYojd = parcelRequire(\"dYojd\");\n\nvar $bDCBv = parcelRequire(\"bDCBv\");\n\nvar $9EKMI = parcelRequire(\"9EKMI\");\nconst $e8874c1bee25ba42$export$b16095919f7e9e4a = new (0, $bDCBv.VitalMetric)((0, $dYojd.VITAL_NAMES).CUMULATIVE_LAYOUT_SHIFT, (x)=>x);\nif (0, $9EKMI.isBrowserScope) (0, $8683F.onCLS)(({ value: value, attribution: attribution, id: id })=>{\n    const attrs = {\n        metricId: id,\n        largestShiftTarget: attribution.largestShiftTarget,\n        largestShiftTime: attribution.largestShiftTime,\n        largestShiftValue: attribution.largestShiftValue,\n        loadState: attribution.loadState\n    };\n    $e8874c1bee25ba42$export$b16095919f7e9e4a.update({\n        value: value,\n        attrs: attrs\n    });\n}, {\n    reportAllChanges: true\n});\n\n});\n\nparcelRegister(\"kQNeS\", function(module, exports) {\n\n$parcel$export(module.exports, \"interactionToNextPaint\", function () { return $f2dedbd44fb8b435$export$ecc87dc3654e0a0f; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $8683F = parcelRequire(\"8683F\");\n\nvar $bDCBv = parcelRequire(\"bDCBv\");\n\nvar $dYojd = parcelRequire(\"dYojd\");\n\nvar $9EKMI = parcelRequire(\"9EKMI\");\nconst $f2dedbd44fb8b435$export$ecc87dc3654e0a0f = new (0, $bDCBv.VitalMetric)((0, $dYojd.VITAL_NAMES).INTERACTION_TO_NEXT_PAINT);\nif (0, $9EKMI.isBrowserScope) /* Interaction-to-Next-Paint */ (0, $8683F.onINP)(({ value: value, attribution: attribution, id: id })=>{\n    const attrs = {\n        metricId: id,\n        eventTarget: attribution.interactionTarget,\n        // event* attrs deprecated in v4, kept for NR backwards compatibility\n        eventTime: attribution.interactionTime,\n        // event* attrs deprecated in v4, kept for NR backwards compatibility\n        interactionTarget: attribution.interactionTarget,\n        interactionTime: attribution.interactionTime,\n        interactionType: attribution.interactionType,\n        inputDelay: attribution.inputDelay,\n        nextPaintTime: attribution.nextPaintTime,\n        processingDuration: attribution.processingDuration,\n        presentationDelay: attribution.presentationDelay,\n        loadState: attribution.loadState\n    };\n    $f2dedbd44fb8b435$export$ecc87dc3654e0a0f.update({\n        value: value,\n        attrs: attrs\n    });\n});\n\n});\n\nparcelRegister(\"gaJ3s\", function(module, exports) {\n\n$parcel$export(module.exports, \"largestContentfulPaint\", function () { return $bc6087731f4f5f6f$export$16a2622ee626f28a; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $8683F = parcelRequire(\"8683F\");\n\nvar $bDCBv = parcelRequire(\"bDCBv\");\n\nvar $dYojd = parcelRequire(\"dYojd\");\n\nvar $9EKMI = parcelRequire(\"9EKMI\");\n\nvar $jWywI = parcelRequire(\"jWywI\");\nconst $bc6087731f4f5f6f$export$16a2622ee626f28a = new (0, $bDCBv.VitalMetric)((0, $dYojd.VITAL_NAMES).LARGEST_CONTENTFUL_PAINT);\nif (0, $9EKMI.isBrowserScope) (0, $8683F.onLCP)(({ value: value, attribution: attribution })=>{\n    /* Largest Contentful Paint - As of WV v3, it still imperfectly tries to detect document vis state asap and isn't supposed to report if page starts hidden. */ if ((0, $9EKMI.initiallyHidden) || $bc6087731f4f5f6f$export$16a2622ee626f28a.isValid) return;\n    let attrs;\n    const lcpEntry = attribution.lcpEntry;\n    if (lcpEntry) {\n        attrs = {\n            size: lcpEntry.size,\n            eid: lcpEntry.id,\n            element: attribution.element,\n            timeToFirstByte: attribution.timeToFirstByte,\n            resourceLoadDelay: attribution.resourceLoadDelay,\n            resourceLoadDuration: attribution.resourceLoadDuration,\n            resourceLoadTime: attribution.resourceLoadDuration,\n            // kept for NR backwards compatibility, deprecated in v3->v4\n            elementRenderDelay: attribution.elementRenderDelay\n        };\n        if (attribution.url) attrs.elUrl = (0, $jWywI.cleanURL)(attribution.url);\n        if (lcpEntry.element?.tagName) attrs.elTag = lcpEntry.element.tagName;\n    }\n    $bc6087731f4f5f6f$export$16a2622ee626f28a.update({\n        value: value,\n        attrs: attrs\n    });\n});\n\n});\n\nparcelRegister(\"kkmY2\", function(module, exports) {\n\n$parcel$export(module.exports, \"timeToFirstByte\", function () { return $ecc77dc229fa9811$export$55966f8361587cf3; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $9EKMI = parcelRequire(\"9EKMI\");\n\nvar $dYojd = parcelRequire(\"dYojd\");\n\nvar $bDCBv = parcelRequire(\"bDCBv\");\n\nvar $8683F = parcelRequire(\"8683F\");\nconst $ecc77dc229fa9811$export$55966f8361587cf3 = new (0, $bDCBv.VitalMetric)((0, $dYojd.VITAL_NAMES).TIME_TO_FIRST_BYTE);\n/**\n * onTTFB is not supported in the following scenarios:\n * - in a non-browser scope\n * - in browsers that do not support PerformanceNavigationTiming API\n * - in an iOS browser\n * - cross-origin iframes specifically in firefox and safari\n */ if ((0, $9EKMI.isBrowserScope) && typeof PerformanceNavigationTiming !== 'undefined' && !(0, $9EKMI.isiOS) && window === window.parent) (0, $8683F.onTTFB)(({ value: value, attribution: attribution })=>{\n    if ($ecc77dc229fa9811$export$55966f8361587cf3.isValid) return;\n    $ecc77dc229fa9811$export$55966f8361587cf3.update({\n        value: value,\n        attrs: {\n            navigationEntry: attribution.navigationEntry\n        }\n    });\n});\nelse if (!$ecc77dc229fa9811$export$55966f8361587cf3.isValid) {\n    const entry = {};\n    // convert real timestamps to relative timestamps to match web-vitals behavior\n    for(let key in (0, $9EKMI.globalScope)?.performance?.timing || {})entry[key] = Math.max((0, $9EKMI.globalScope)?.performance?.timing[key] - (0, $9EKMI.originTime), 0);\n    // ttfb is equiv to document's responseStart property in timing API --> https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseStart\n    $ecc77dc229fa9811$export$55966f8361587cf3.update({\n        value: entry.responseStart,\n        attrs: {\n            navigationEntry: entry\n        }\n    });\n}\n\n});\n\nparcelRegister(\"aDRsS\", function(module, exports) {\n\n$parcel$export(module.exports, \"eventOrigin\", function () { return $7bf704e30d01a3c2$export$d65a95873ee0ca32; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ /**\n * Returns a string representing the origin of an event target. Used by SessionTrace and PageViewTiming features to assign a \"better\" target to events\n * @param {*} t The target to derive the origin from.\n * @param {*} [target] A known target to compare to. If supplied, and a derived origin could not be reached, this will be referenced.\n * @param {*} [ee] An event emitter instance to use for context retrieval, which only applies to XMLHttpRequests.\n * @returns {string} The derived origin of the event target.\n */ function $7bf704e30d01a3c2$export$d65a95873ee0ca32(t, target, ee) {\n    let origin = 'unknown';\n    if (t && t instanceof XMLHttpRequest) {\n        const params = ee.context(t).params;\n        if (!params || !params.status || !params.method || !params.host || !params.pathname) return 'xhrOriginMissing';\n        origin = params.status + ' ' + params.method + ': ' + params.host + params.pathname;\n    } else if (t && typeof t.tagName === 'string') {\n        origin = t.tagName.toLowerCase();\n        if (t.id) origin += '#' + t.id;\n        if (t.className) for(let i = 0; i < t.classList.length; i++)origin += '.' + t.classList[i];\n    }\n    if (origin === 'unknown') {\n        if (typeof target === 'string') origin = target;\n        else if (target === document) origin = 'document';\n        else if (target === window) origin = 'window';\n        else if (target instanceof FileReader) origin = 'FileReader';\n    }\n    return origin;\n}\n\n});\n\n\n\n//# sourceMappingURL=aggregate.d467b96a.js.map\n","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { nullable, numeric, getAddStringContext, addCustomAttributes } from '../../../common/serialize/bel-serializer';\nimport { registerHandler } from '../../../common/event-emitter/register-handler';\nimport { handle } from '../../../common/event-emitter/handle';\nimport { FEATURE_NAME } from '../constants';\nimport { FEATURE_NAMES } from '../../../loaders/features/features';\nimport { AggregateBase } from '../../utils/aggregate-base';\nimport { cumulativeLayoutShift } from '../../../common/vitals/cumulative-layout-shift';\nimport { firstContentfulPaint } from '../../../common/vitals/first-contentful-paint';\nimport { firstPaint } from '../../../common/vitals/first-paint';\nimport { interactionToNextPaint } from '../../../common/vitals/interaction-to-next-paint';\nimport { largestContentfulPaint } from '../../../common/vitals/largest-contentful-paint';\nimport { timeToFirstByte } from '../../../common/vitals/time-to-first-byte';\nimport { subscribeToVisibilityChange } from '../../../common/window/page-visibility';\nimport { VITAL_NAMES } from '../../../common/vitals/constants';\nimport { initiallyHidden } from '../../../common/constants/runtime';\nimport { eventOrigin } from '../../../common/util/event-origin';\nexport class Aggregate extends AggregateBase {\n  static featureName = FEATURE_NAME;\n  #handleVitalMetric = ({\n    name,\n    value,\n    attrs\n  }) => {\n    this.addTiming(name, value, attrs);\n  };\n  constructor(agentRef) {\n    super(agentRef, FEATURE_NAME);\n    this.curSessEndRecorded = false;\n    this.firstIxnRecorded = false;\n    registerHandler('docHidden', msTimestamp => this.endCurrentSession(msTimestamp), this.featureName, this.ee);\n    // Add the time of _window pagehide event_ firing to the next PVT harvest == NRDB windowUnload attr:\n    registerHandler('winPagehide', msTimestamp => this.addTiming('unload', msTimestamp, null), this.featureName, this.ee);\n    this.waitForFlags([]).then(() => {\n      firstPaint.subscribe(this.#handleVitalMetric);\n      firstContentfulPaint.subscribe(this.#handleVitalMetric);\n      largestContentfulPaint.subscribe(this.#handleVitalMetric);\n      interactionToNextPaint.subscribe(this.#handleVitalMetric);\n      timeToFirstByte.subscribe(({\n        attrs\n      }) => {\n        this.addTiming('load', Math.round(attrs.navigationEntry.loadEventEnd));\n      });\n      subscribeToVisibilityChange(() => {\n        /* Downstream, the event consumer interprets all timing node value as ms-unit and converts it to seconds via division by 1000. CLS is unitless so this normally is a problem.\n          bel.6 schema also doesn't support decimal values, of which cls within [0,1). However, the two nicely cancels out, and we can multiply cls by 1000 to both negate the division\n          and send an integer > 1. We effectively lose some precision down to 3 decimal places for this workaround. E.g. (real) 0.749132... -> 749.132...-> 749 -> 0.749 (final) */\n        const {\n          name,\n          value,\n          attrs\n        } = cumulativeLayoutShift.current;\n        if (value === undefined) return;\n        this.addTiming(name, value * 1000, attrs);\n      }, true, true); // CLS node should only reports on vis change rather than on every change\n\n      this.drain();\n    });\n  }\n\n  /**\n   * Add the time of _document visibilitychange to hidden_ to the next PVT harvest == NRDB pageHide attr.\n   * @param {number} timestamp\n   */\n  endCurrentSession(timestamp) {\n    if (!this.curSessEndRecorded) {\n      // TO DO: stage 2 - we don't want to capture this timing twice on page navigating away, but it should run again if we return to page and away *again*\n      this.addTiming('pageHide', timestamp, null);\n      this.curSessEndRecorded = true;\n    }\n  }\n  addTiming(name, value, attrs) {\n    attrs = attrs || {};\n    addConnectionAttributes(attrs); // network conditions may differ from the actual for VitalMetrics when they were captured\n\n    // If cls was set to another value by `onCLS`, then it's supported and is attached onto any timing but is omitted until such time.\n    /*\n    *cli Apr'23 - Convert attach-to-all -> attach-if-not-null. See NEWRELIC-6143.\n    Issue: Because NR 'pageHide' was only sent once with what is considered the \"final\" CLS value, in the case that 'pageHide' fires before 'load' happens, we incorrectly a final CLS of 0 for that page.\n    Mitigation: We've set initial CLS to null so that it's omitted from timings like 'pageHide' in that edge case. It should only be included if onCLS callback was executed at least once.\n    Future: onCLS value changes should be reported directly & CLS separated into its own timing node so it's not beholden to 'pageHide' firing. It'd also be possible to report the real final CLS.\n    *cli Mar'24 update: CLS now emitted as its own timing node in addition to as-property under other nodes. The 'cls' property is unnecessary for cls nodes.\n    */\n    if (name !== VITAL_NAMES.CUMULATIVE_LAYOUT_SHIFT && cumulativeLayoutShift.current.value >= 0) {\n      attrs.cls = cumulativeLayoutShift.current.value;\n    }\n    const timing = {\n      name,\n      value,\n      attrs\n    };\n    this.events.add(timing);\n    handle('pvtAdded', [name, value, attrs], undefined, FEATURE_NAMES.sessionTrace, this.ee);\n    this.checkForFirstInteraction();\n\n    // makes testing easier\n    return timing;\n  }\n\n  /**\n   * Checks the performance API to see if the agent can set a first interaction event value\n   * @returns {void}\n   */\n  checkForFirstInteraction() {\n    // preserve the original behavior where FID is not reported if the page is hidden before the first interaction\n    if (this.firstIxnRecorded || initiallyHidden || !performance) return;\n    const firstInput = performance.getEntriesByType('first-input')[0];\n    if (!firstInput) return;\n    this.firstIxnRecorded = true;\n    this.addTiming('fi', firstInput.startTime, {\n      type: firstInput.name,\n      eventTarget: eventOrigin(firstInput.target),\n      loadState: document.readyState\n    });\n  }\n  appendGlobalCustomAttributes(timing) {\n    var timingAttributes = timing.attrs || {};\n    var reservedAttributes = ['size', 'eid', 'cls', 'type', 'fid', 'elTag', 'elUrl', 'net-type', 'net-etype', 'net-rtt', 'net-dlink'];\n    Object.entries(this.agentRef.info.jsAttributes || {}).forEach(([key, val]) => {\n      if (reservedAttributes.indexOf(key) < 0) {\n        timingAttributes[key] = val;\n      }\n    });\n  }\n  preHarvestChecks() {\n    this.checkForFirstInteraction();\n    return super.preHarvestChecks();\n  }\n\n  // serialize array of timing data\n  serializer(eventBuffer) {\n    var addString = getAddStringContext(this.agentRef.runtime.obfuscator);\n    var payload = 'bel.6;';\n    for (var i = 0; i < eventBuffer.length; i++) {\n      var timing = eventBuffer[i];\n      payload += 'e,';\n      payload += addString(timing.name) + ',';\n      payload += nullable(timing.value, numeric, false) + ',';\n      this.appendGlobalCustomAttributes(timing);\n      var attrParts = addCustomAttributes(timing.attrs, addString);\n      if (attrParts && attrParts.length > 0) {\n        payload += numeric(attrParts.length) + ';' + attrParts.join(';');\n      }\n      if (i + 1 < eventBuffer.length) payload += ';';\n    }\n    return payload;\n  }\n}\nfunction addConnectionAttributes(obj) {\n  var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection; // to date, both window & worker shares the same support for connection\n  if (!connection) return;\n  if (connection.type) obj['net-type'] = connection.type;\n  if (connection.effectiveType) obj['net-etype'] = connection.effectiveType;\n  if (connection.rtt) obj['net-rtt'] = connection.rtt;\n  if (connection.downlink) obj['net-dlink'] = connection.downlink;\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { stringify } from '../util/stringify';\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar MAX_ATTRIBUTES = 64;\nexport function nullable(val, fn, comma) {\n  return val || val === 0 || val === '' ? fn(val) + (comma ? ',' : '') : '!';\n}\nexport function numeric(n, noDefault) {\n  if (noDefault) {\n    return Math.floor(n).toString(36);\n  }\n  return n === undefined || n === 0 ? '' : Math.floor(n).toString(36);\n}\nexport function getAddStringContext(obfuscator) {\n  let stringTableIdx = 0;\n  const stringTable = Object.prototype.hasOwnProperty.call(Object, 'create') ? Object.create(null) : {};\n  return addString;\n  function addString(str) {\n    if (typeof str === 'undefined' || str === '') return '';\n    str = obfuscator.obfuscateString(String(str));\n    if (hasOwnProp.call(stringTable, str)) {\n      return numeric(stringTable[str], true);\n    } else {\n      stringTable[str] = stringTableIdx++;\n      return quoteString(str);\n    }\n  }\n}\nexport function addCustomAttributes(attrs, addString) {\n  var attrParts = [];\n  Object.entries(attrs || {}).forEach(([key, val]) => {\n    if (attrParts.length >= MAX_ATTRIBUTES) return;\n    var type = 5;\n    var serializedValue;\n    // add key to string table first\n    key = addString(key);\n    switch (typeof val) {\n      case 'object':\n        if (val) {\n          // serialize objects to strings\n          serializedValue = addString(stringify(val));\n        } else {\n          // null attribute type\n          type = 9;\n        }\n        break;\n      case 'number':\n        type = 6;\n        // make sure numbers contain a `.` so they are parsed as doubles\n        serializedValue = val % 1 ? val : val + '.';\n        break;\n      case 'boolean':\n        type = val ? 7 : 8;\n        break;\n      case 'undefined':\n        // we treat undefined as a null attribute (since dirac does not have a concept of undefined)\n        type = 9;\n        break;\n      default:\n        serializedValue = addString(val);\n    }\n    attrParts.push([type, key + (serializedValue ? ',' + serializedValue : '')]);\n  });\n  return attrParts;\n}\nvar escapable = /([,\\\\;])/g;\nfunction quoteString(str) {\n  return \"'\" + str.replace(escapable, '\\\\$1');\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { onCLS } from 'web-vitals/attribution';\nimport { VITAL_NAMES } from './constants';\nimport { VitalMetric } from './vital-metric';\nimport { isBrowserScope } from '../constants/runtime';\nexport const cumulativeLayoutShift = new VitalMetric(VITAL_NAMES.CUMULATIVE_LAYOUT_SHIFT, x => x);\nif (isBrowserScope) {\n  onCLS(({\n    value,\n    attribution,\n    id\n  }) => {\n    const attrs = {\n      metricId: id,\n      largestShiftTarget: attribution.largestShiftTarget,\n      largestShiftTime: attribution.largestShiftTime,\n      largestShiftValue: attribution.largestShiftValue,\n      loadState: attribution.loadState\n    };\n    cumulativeLayoutShift.update({\n      value,\n      attrs\n    });\n  }, {\n    reportAllChanges: true\n  });\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { onINP } from 'web-vitals/attribution';\nimport { VitalMetric } from './vital-metric';\nimport { VITAL_NAMES } from './constants';\nimport { isBrowserScope } from '../constants/runtime';\nexport const interactionToNextPaint = new VitalMetric(VITAL_NAMES.INTERACTION_TO_NEXT_PAINT);\nif (isBrowserScope) {\n  /* Interaction-to-Next-Paint */\n  onINP(({\n    value,\n    attribution,\n    id\n  }) => {\n    const attrs = {\n      metricId: id,\n      eventTarget: attribution.interactionTarget,\n      // event* attrs deprecated in v4, kept for NR backwards compatibility\n      eventTime: attribution.interactionTime,\n      // event* attrs deprecated in v4, kept for NR backwards compatibility\n      interactionTarget: attribution.interactionTarget,\n      interactionTime: attribution.interactionTime,\n      interactionType: attribution.interactionType,\n      inputDelay: attribution.inputDelay,\n      nextPaintTime: attribution.nextPaintTime,\n      processingDuration: attribution.processingDuration,\n      presentationDelay: attribution.presentationDelay,\n      loadState: attribution.loadState\n    };\n    interactionToNextPaint.update({\n      value,\n      attrs\n    });\n  });\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { onLCP } from 'web-vitals/attribution';\nimport { VitalMetric } from './vital-metric';\nimport { VITAL_NAMES } from './constants';\nimport { initiallyHidden, isBrowserScope } from '../constants/runtime';\nimport { cleanURL } from '../url/clean-url';\nexport const largestContentfulPaint = new VitalMetric(VITAL_NAMES.LARGEST_CONTENTFUL_PAINT);\nif (isBrowserScope) {\n  onLCP(({\n    value,\n    attribution\n  }) => {\n    /* Largest Contentful Paint - As of WV v3, it still imperfectly tries to detect document vis state asap and isn't supposed to report if page starts hidden. */\n    if (initiallyHidden || largestContentfulPaint.isValid) return;\n    let attrs;\n    const lcpEntry = attribution.lcpEntry;\n    if (lcpEntry) {\n      attrs = {\n        size: lcpEntry.size,\n        eid: lcpEntry.id,\n        element: attribution.element,\n        timeToFirstByte: attribution.timeToFirstByte,\n        resourceLoadDelay: attribution.resourceLoadDelay,\n        resourceLoadDuration: attribution.resourceLoadDuration,\n        resourceLoadTime: attribution.resourceLoadDuration,\n        // kept for NR backwards compatibility, deprecated in v3->v4\n        elementRenderDelay: attribution.elementRenderDelay\n      };\n      if (attribution.url) attrs.elUrl = cleanURL(attribution.url);\n      if (lcpEntry.element?.tagName) attrs.elTag = lcpEntry.element.tagName;\n    }\n    largestContentfulPaint.update({\n      value,\n      attrs\n    });\n  });\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { globalScope, isBrowserScope, isiOS, originTime } from '../constants/runtime';\nimport { VITAL_NAMES } from './constants';\nimport { VitalMetric } from './vital-metric';\nimport { onTTFB } from 'web-vitals/attribution';\nexport const timeToFirstByte = new VitalMetric(VITAL_NAMES.TIME_TO_FIRST_BYTE);\n\n/**\n * onTTFB is not supported in the following scenarios:\n * - in a non-browser scope\n * - in browsers that do not support PerformanceNavigationTiming API\n * - in an iOS browser\n * - cross-origin iframes specifically in firefox and safari\n */\nif (isBrowserScope && typeof PerformanceNavigationTiming !== 'undefined' && !isiOS && window === window.parent) {\n  onTTFB(({\n    value,\n    attribution\n  }) => {\n    if (timeToFirstByte.isValid) return;\n    timeToFirstByte.update({\n      value,\n      attrs: {\n        navigationEntry: attribution.navigationEntry\n      }\n    });\n  });\n} else {\n  if (!timeToFirstByte.isValid) {\n    const entry = {};\n    // convert real timestamps to relative timestamps to match web-vitals behavior\n    for (let key in globalScope?.performance?.timing || {}) entry[key] = Math.max(globalScope?.performance?.timing[key] - originTime, 0);\n\n    // ttfb is equiv to document's responseStart property in timing API --> https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseStart\n    timeToFirstByte.update({\n      value: entry.responseStart,\n      attrs: {\n        navigationEntry: entry\n      }\n    });\n  }\n}","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Returns a string representing the origin of an event target. Used by SessionTrace and PageViewTiming features to assign a \"better\" target to events\n * @param {*} t The target to derive the origin from.\n * @param {*} [target] A known target to compare to. If supplied, and a derived origin could not be reached, this will be referenced.\n * @param {*} [ee] An event emitter instance to use for context retrieval, which only applies to XMLHttpRequests.\n * @returns {string} The derived origin of the event target.\n */\nexport function eventOrigin(t, target, ee) {\n  let origin = 'unknown';\n  if (t && t instanceof XMLHttpRequest) {\n    const params = ee.context(t).params;\n    if (!params || !params.status || !params.method || !params.host || !params.pathname) return 'xhrOriginMissing';\n    origin = params.status + ' ' + params.method + ': ' + params.host + params.pathname;\n  } else if (t && typeof t.tagName === 'string') {\n    origin = t.tagName.toLowerCase();\n    if (t.id) origin += '#' + t.id;\n    if (t.className) {\n      for (let i = 0; i < t.classList.length; i++) origin += '.' + t.classList[i];\n    }\n  }\n  if (origin === 'unknown') {\n    if (typeof target === 'string') origin = target;else if (target === document) origin = 'document';else if (target === window) origin = 'window';else if (target instanceof FileReader) origin = 'FileReader';\n  }\n  return origin;\n}"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$51080fcd9910df5b$export$b9601df20779e14a","$ewyxt","$4he1m","$gy0pT","$gOaMh","$3R40a","$3DmF0","$jXK74","$ifld8","$gDw2s","$kQNeS","$gaJ3s","$kkmY2","$kx4OV","$dYojd","$9EKMI","$aDRsS","AggregateBase","featureName","FEATURE_NAME","name","value","attrs","addTiming","constructor","agentRef","curSessEndRecorded","firstIxnRecorded","registerHandler","msTimestamp","endCurrentSession","ee","waitForFlags","then","firstPaint","subscribe","firstContentfulPaint","largestContentfulPaint","interactionToNextPaint","timeToFirstByte","Math","round","navigationEntry","loadEventEnd","subscribeToVisibilityChange","cumulativeLayoutShift","current","undefined","drain","timestamp","obj","connection","navigator","mozConnection","webkitConnection","type","effectiveType","rtt","downlink","VITAL_NAMES","CUMULATIVE_LAYOUT_SHIFT","cls","timing","events","add","handle","FEATURE_NAMES","sessionTrace","checkForFirstInteraction","initiallyHidden","performance","firstInput","getEntriesByType","startTime","eventTarget","eventOrigin","target","loadState","document","readyState","appendGlobalCustomAttributes","timingAttributes","reservedAttributes","entries","info","jsAttributes","forEach","key","val","indexOf","preHarvestChecks","serializer","eventBuffer","addString","getAddStringContext","runtime","obfuscator","payload","i","length","nullable","numeric","attrParts","addCustomAttributes","join","$a92ed88948900b2c$export$133fc36489ac9add","$a92ed88948900b2c$export$b7a508fa8dae59fc","$a92ed88948900b2c$export$71f03e17b83cbe02","$a92ed88948900b2c$export$b7f14f78b59de5aa","$8KO5M","$a92ed88948900b2c$var$hasOwnProp","prototype","hasOwnProperty","fn","comma","noDefault","floor","toString","stringTableIdx","stringTable","call","create","str","obfuscateString","String","replace","$a92ed88948900b2c$var$escapable","serializedValue","stringify","push","$e8874c1bee25ba42$export$b16095919f7e9e4a","$8683F","$bDCBv","VitalMetric","x","isBrowserScope","onCLS","attribution","id","metricId","largestShiftTarget","largestShiftTime","largestShiftValue","update","reportAllChanges","$f2dedbd44fb8b435$export$ecc87dc3654e0a0f","INTERACTION_TO_NEXT_PAINT","onINP","interactionTarget","eventTime","interactionTime","interactionType","inputDelay","nextPaintTime","processingDuration","presentationDelay","$bc6087731f4f5f6f$export$16a2622ee626f28a","$jWywI","LARGEST_CONTENTFUL_PAINT","onLCP","isValid","lcpEntry","size","eid","element","resourceLoadDelay","resourceLoadDuration","resourceLoadTime","elementRenderDelay","url","elUrl","cleanURL","tagName","elTag","$ecc77dc229fa9811$export$55966f8361587cf3","TIME_TO_FIRST_BYTE","PerformanceNavigationTiming","isiOS","parent","onTTFB","entry","globalScope","max","originTime","responseStart","$7bf704e30d01a3c2$export$d65a95873ee0ca32","t","origin","XMLHttpRequest","params","context","status","method","host","pathname","toLowerCase","className","classList","FileReader"],"version":3,"file":"aggregate.d467b96a.js.map"}