{"mappings":"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","sources":["<anon>","node_modules/@newrelic/browser-agent/dist/esm/features/utils/lazy-feature-loader.js","node_modules/@parcel/runtime-js/lib/runtime-ec1021ab474c203d.js","node_modules/@parcel/runtime-js/lib/runtime-c2cf60a1a624b7b2.js","node_modules/@parcel/runtime-js/lib/runtime-77d0083e2659d8bf.js","node_modules/@parcel/runtime-js/lib/runtime-7e2f6914baec36cb.js","node_modules/@parcel/runtime-js/lib/runtime-8c44616c39dbe6fd.js","node_modules/@parcel/runtime-js/lib/runtime-502f4b6ceb1faa48.js","node_modules/@parcel/runtime-js/lib/runtime-fa44f9c0dd29f848.js","node_modules/@parcel/runtime-js/lib/runtime-ba7cd0213d02972c.js","node_modules/@parcel/runtime-js/lib/runtime-b6ce25fcc5f42fa6.js","node_modules/@parcel/runtime-js/lib/runtime-e8c416251b8e6407.js","node_modules/@parcel/runtime-js/lib/runtime-cd454496fd9f7bae.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$import(url) {\n  url = parcelRequire.i?.[url] || url;\n  return import($parcel$distDir + url);\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var $parcel$distDir = \"./\";\nvar parcelRequire = $parcel$global[\"parcelRequire5e30\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8DzR0\", function(module, exports) {\n\n$parcel$export(module.exports, \"lazyFeatureLoader\", function () { return $649dc71521dbf4d7$export$586f6a376624b3da; });\n/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */ \nvar $3R40a = parcelRequire(\"3R40a\");\n\n\n\n\n\n\n\n\n\n\n\nfunction $649dc71521dbf4d7$export$586f6a376624b3da(featureName, featurePart) {\n    if (featurePart === 'aggregate') switch(featureName){\n        case (0, $3R40a.FEATURE_NAMES).ajax:\n            return (parcelRequire(\"cJd17\"));\n        case (0, $3R40a.FEATURE_NAMES).jserrors:\n            return (parcelRequire(\"iBnWF\"));\n        case (0, $3R40a.FEATURE_NAMES).genericEvents:\n            return (parcelRequire(\"7ltH0\"));\n        case (0, $3R40a.FEATURE_NAMES).logging:\n            return (parcelRequire(\"l5lLs\"));\n        case (0, $3R40a.FEATURE_NAMES).metrics:\n            return (parcelRequire(\"7f84n\"));\n        case (0, $3R40a.FEATURE_NAMES).pageViewEvent:\n            return (parcelRequire(\"8ChF5\"));\n        case (0, $3R40a.FEATURE_NAMES).pageViewTiming:\n            return (parcelRequire(\"6E5S0\"));\n        case (0, $3R40a.FEATURE_NAMES).sessionReplay:\n            return (parcelRequire(\"43k7d\"));\n        case (0, $3R40a.FEATURE_NAMES).sessionTrace:\n            return (parcelRequire(\"31Vsd\"));\n        case (0, $3R40a.FEATURE_NAMES).spa:\n            return (parcelRequire(\"5ryzF\"));\n        case (0, $3R40a.FEATURE_NAMES).softNav:\n            return (parcelRequire(\"is2Wm\"));\n        default:\n            throw new Error(\"Attempted to load unsupported agent feature: \".concat(featureName, \" \").concat(featurePart));\n    }\n}\n\n});\nparcelRegister(\"cJd17\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"any70\")\n]).then(()=>parcelRequire('iaK9r'));\n\n});\n\nparcelRegister(\"iBnWF\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"7Z7gv\")\n]).then(()=>parcelRequire('bIXwV'));\n\n});\n\nparcelRegister(\"7ltH0\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"9lnpW\")\n]).then(()=>parcelRequire('jBB2H'));\n\n});\n\nparcelRegister(\"l5lLs\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"5d2xF\")\n]).then(()=>parcelRequire('lw6U3'));\n\n});\n\nparcelRegister(\"7f84n\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"kY25b\")\n]).then(()=>parcelRequire('4ePKb'));\n\n});\n\nparcelRegister(\"8ChF5\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"1Jblw\"),\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"kl0II\")\n]).then(()=>parcelRequire('lueeF'));\n\n});\n\nparcelRegister(\"6E5S0\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"1Jblw\"),\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"5MKAi\")\n]).then(()=>parcelRequire('6XknC'));\n\n});\n\nparcelRegister(\"43k7d\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"4f6sw\")\n]).then(()=>parcelRequire('8rBbr'));\n\n});\n\nparcelRegister(\"31Vsd\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"iL0y8\")\n]).then(()=>parcelRequire('9ckjO'));\n\n});\n\nparcelRegister(\"5ryzF\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"1Jblw\"),\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"iogjb\")\n]).then(()=>parcelRequire('gw6Td'));\n\n});\n\nparcelRegister(\"is2Wm\", function(module, exports) {\nmodule.exports = Promise.all([\n    $parcel$import(\"1Jblw\"),\n    $parcel$import(\"bolVv\"),\n    $parcel$import(\"1XM0l\")\n]).then(()=>parcelRequire('bEFXe'));\n\n});\n\n\n\n//# sourceMappingURL=lazy-feature-loader.a9d258ec.js.map\n","/**\n * Copyright 2020-2025 New Relic, Inc. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { FEATURE_NAMES } from '../../loaders/features/features';\n\n/**\n * Centralizes the lazy loading of agent feature aggregate and instrument sources.\n *\n * This function uses two defined switch cases to allow us to easily name our chunks and re-use these\n * chunks for different agent types. We do not use template strings or string concatenation here because\n * doing so makes it much more difficult to name the chunks and forces Webpack to \"guess\" what the chunks\n * should be.\n * @param featureName Name of the feature to import such as ajax or session_trace\n * @param featurePart Name of the feature part to load; should be either instrument or aggregate\n * @returns {Promise<InstrumentBase|FeatureBase|null>}\n */\nexport function lazyFeatureLoader(featureName, featurePart) {\n  if (featurePart === 'aggregate') {\n    switch (featureName) {\n      case FEATURE_NAMES.ajax:\n        return import(/* webpackChunkName: \"ajax-aggregate\" */'../ajax/aggregate');\n      case FEATURE_NAMES.jserrors:\n        return import(/* webpackChunkName: \"jserrors-aggregate\" */'../jserrors/aggregate');\n      case FEATURE_NAMES.genericEvents:\n        return import(/* webpackChunkName: \"generic_events-aggregate\" */'../generic_events/aggregate');\n      case FEATURE_NAMES.logging:\n        return import(/* webpackChunkName: \"logging-aggregate\" */'../logging/aggregate');\n      case FEATURE_NAMES.metrics:\n        return import(/* webpackChunkName: \"metrics-aggregate\" */'../metrics/aggregate');\n      case FEATURE_NAMES.pageViewEvent:\n        return import(/* webpackChunkName: \"page_view_event-aggregate\" */'../page_view_event/aggregate');\n      case FEATURE_NAMES.pageViewTiming:\n        return import(/* webpackChunkName: \"page_view_timing-aggregate\" */'../page_view_timing/aggregate');\n      case FEATURE_NAMES.sessionReplay:\n        return import(/* webpackChunkName: \"session_replay-aggregate\" */'../session_replay/aggregate');\n      case FEATURE_NAMES.sessionTrace:\n        return import(/* webpackChunkName: \"session_trace-aggregate\" */'../session_trace/aggregate');\n      case FEATURE_NAMES.spa:\n        return import(/* webpackChunkName: \"spa-aggregate\" */'../spa/aggregate');\n      case FEATURE_NAMES.softNav:\n        return import(/* webpackChunkName: \"basic-spa-aggregate\" */'../soft_navigations/aggregate');\n      default:\n        throw new Error(\"Attempted to load unsupported agent feature: \".concat(featureName, \" \").concat(featurePart));\n    }\n  }\n}","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"any70\")]).then(() => parcelRequire('iaK9r'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"7Z7gv\")]).then(() => parcelRequire('bIXwV'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"9lnpW\")]).then(() => parcelRequire('jBB2H'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"5d2xF\")]).then(() => parcelRequire('lw6U3'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"kY25b\")]).then(() => parcelRequire('4ePKb'));","module.exports = Promise.all([parcelRequire.load(\"1Jblw\"), parcelRequire.load(\"bolVv\"), parcelRequire.load(\"kl0II\")]).then(() => parcelRequire('lueeF'));","module.exports = Promise.all([parcelRequire.load(\"1Jblw\"), parcelRequire.load(\"bolVv\"), parcelRequire.load(\"5MKAi\")]).then(() => parcelRequire('6XknC'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"4f6sw\")]).then(() => parcelRequire('8rBbr'));","module.exports = Promise.all([parcelRequire.load(\"bolVv\"), parcelRequire.load(\"iL0y8\")]).then(() => parcelRequire('9ckjO'));","module.exports = Promise.all([parcelRequire.load(\"1Jblw\"), parcelRequire.load(\"bolVv\"), parcelRequire.load(\"iogjb\")]).then(() => parcelRequire('gw6Td'));","module.exports = Promise.all([parcelRequire.load(\"1Jblw\"), parcelRequire.load(\"bolVv\"), parcelRequire.load(\"1XM0l\")]).then(() => parcelRequire('bEFXe'));"],"names":["$parcel$import","url","$parcel$distDir","parcelRequire","i","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","Object","defineProperty","get","$649dc71521dbf4d7$export$586f6a376624b3da","set","s","enumerable","configurable","$3R40a","featureName","featurePart","FEATURE_NAMES","ajax","jserrors","genericEvents","logging","metrics","pageViewEvent","pageViewTiming","sessionReplay","sessionTrace","spa","softNav","Error","concat","Promise","all","then"],"version":3,"file":"lazy-feature-loader.a9d258ec.js.map"}